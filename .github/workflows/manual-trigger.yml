name: Manual Workflowsss

on: 
  workflow_dispatch:
    inputs:
      environment:
        type: environment
        required: true
        default: test

  pull_request:
    types: [opened, reopened, synchronize]
    branches:
      - main
      - "**"
    paths:
      - "**"

env:
  DEFAULT_ENV: ${{ inputs.environment || 'test' }}

jobs:

  # has no access to environment secrets
  first-trigger:
    name: first trigger
    runs-on: ubuntu-latest
    steps:
      - name: Fetch environment
        id: fetch-env
        run: |
          echo "Found ${{ secrets._SOMETHING_HIDDEN }} environment secrets"
          echo "environment is ${{ github.event.inputs.environment }} / ${{ inputs.environment }}"

  # fails to load environment secrets unless workflow trigger is manaul
  second-triggered-stanza:
    name: seconds
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: blurghk
        id: blurksplat
        run: |
          echo "👁️ is this secret now accessible ? -> ${{ secrets._SOMETHING_HIDDEN }} <- would be here if it is."
          echo "environment is ${{ github.event.inputs.environment }} / ${{ inputs.environment }}"

  # manual trigger will load environment, other triggers default to 'test' environment
  thirds-stanza:
    name: thirdsess
    runs-on: ubuntu-latest
    environment:  ${{ inputs.environment || 'test' }}
    outputs:
      _TF_VARS: ${{ secrets._SOMETHING_HIDDEN }}
    steps:
      - name: default environment?
        id: defenv
        run: |
          echo "🦟 default (test) environment should be set here on push (not on manual trigger) ${{ env.DEFAULT_ENV }} ? -> ${{ secrets._SOMETHING_HIDDEN }} <- would be here if it is."
          echo "environment is ${{ github.event.inputs.environment }} / ${{ inputs.environment }}"

  plan:
    name: plan
    runs-on: ubuntu-22.04
    timeout-minutes: 3
    environment:  ${{ inputs.environment || 'test' }}
    steps:
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v2

      - name: Terraform plan
        id: plan
        run: |
          terraform plan \
          -var ${{ secrets._SOMETHING_HIDDEN }}
          -no-color -out=tf.plan ${{ inputs.tf-root-dir }}
        continue-on-error: false

  # call-terraform-fmt:
  #   uses: ./.github/workflows/tf-fmt.yml
  #   with:
  #     tf-root-dir: "tf/"

  # call-terraform-plan:
  #   uses: ./.github/workflows/tf-plan.yml
  #   needs: thirds-stanza
  #   with:
  #     tf-root-dir: "tf/"
  #   secrets:
  #     tf-var: ${{ needs.thirds-stanza.outputs._TF_VARS }}
